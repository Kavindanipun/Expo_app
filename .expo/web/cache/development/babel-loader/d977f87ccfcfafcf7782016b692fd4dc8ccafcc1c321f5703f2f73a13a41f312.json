{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Exercisesstyle = require(\"../stylesheets/Exercisesstyle\");\nvar _native = require(\"@react-navigation/native\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\kavinda\\\\Downloads\\\\gig\\\\Exercises_App-main\\\\src\\\\Screens\\\\Exercise.js\";\nvar exercises = {\n  Sun: ['Hammer curl              3reps|12/10/s       30sec', 'Barbell curl             3reps|12/10/s       30sec', 'Spider curl              3reps|12/10/s       30sec', 'Incline dumbbell curl    3reps|12/10/s       30sec', 'Reverse barbell curl     3reps|12/10/s       30sec', 'Overhead cable curl      3reps|12/10/s       30sec', 'Drag curl                3reps|12/10/s       30sec', 'Barbell Bicep Curl       3reps|12/10/s       30sec', 'Preacher Curl            3reps|12/10/s       30sec'],\n  Mon: ['Lying triceps extension   3reps|12/10/s       30sec', 'Weighted bench dip        3reps|12/10/s       30sec', 'Tricep dips               3reps|12/10/s       30sec', 'Overhead Triceps          3reps|12/10/s       30sec', 'Close grip bench press    3reps|12/10/s       30sec', 'TRX tricep extension      3reps|12/10/s       30sec'],\n  Tue: ['Front press        3reps|12/10/s       30sec', 'Back press         3reps|12/10/s       30sec', 'Face pull down     3reps|12/10/s       30sec', 'Arnold press       3reps|12/10/s       30sec'],\n  Wed: ['Flat bench press       3reps|12/10/s         30sec', 'Dumbbell bench press   3reps|12/10/s         30sec', 'Incline bench press    3reps|12/10/s         30sec', 'Cable flys             3reps|12/10/s         30sec'],\n  Thu: ['Leg press            3reps|12/10/s          30sec', 'Leg curl             3reps|12/10/s          30sec', 'Leg extensions       3reps|12/10/s          30sec', 'Full squat           3reps|12/10/s          30sec'],\n  Fri: ['Flat bench press        3reps|12/10/s            30sec', 'Dumbbell bench press    3reps|12/10/s            30sec', 'Leg extensions          3reps|12/10/s            30sec', 'Full squat              3reps|12/10/s            30sec'],\n  Sat: ['Incline bench press       3reps|12/10/s      30sec', 'Cable flys                3reps|12/10/s      30sec', 'Close grip bench press    3reps|12/10/s      30sec', 'TRX tricep extension      3reps|12/10/s      30sec']\n};\nvar getRandomExercises = function getRandomExercises(category, count) {\n  var categoryExercises = exercises[category];\n  var selectedExercises = [];\n  while (selectedExercises.length < count) {\n    var randomIndex = Math.floor(Math.random() * categoryExercises.length);\n    var exercise = categoryExercises[randomIndex];\n    if (!selectedExercises.includes(exercise)) {\n      selectedExercises.push(exercise);\n    }\n  }\n  return selectedExercises;\n};\nvar Exercises = function Exercises(_ref) {\n  var _route$params;\n  var route = _ref.route;\n  var navigation = (0, _native.useNavigation)();\n  var selectedDays = (route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.selectedDays) || [];\n  if (selectedDays.length === 0) {\n    return (0, _jsxRuntime.jsx)(_reactNative.View, {\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        children: \"No days selected.\"\n      })\n    });\n  }\n  return (0, _jsxRuntime.jsxs)(_reactNative.ImageBackground, {\n    source: require('./image/secondpage_image.jpg'),\n    style: _Exercisesstyle.styles.backgroundImage,\n    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: _Exercisesstyle.styles.container,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _Exercisesstyle.styles.text,\n        children: \"Your BMI is...\"\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {\n      style: _Exercisesstyle.styles.scrollContainer,\n      children: selectedDays.map(function (day, index) {\n        return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: _Exercisesstyle.styles.text1,\n            children: `Day ${index + 1}`\n          }), getRandomExercises(day, 4).map(function (exercise, exerciseIndex) {\n            return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n              style: [_Exercisesstyle.styles.button, _Exercisesstyle.styles.buttonWithMargin],\n              onPress: function onPress() {\n                return navigation.navigate('Tutorial', {\n                  exerciseName: exercise\n                });\n              },\n              children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                style: _Exercisesstyle.styles.buttonText,\n                children: exercise\n              })\n            }, exerciseIndex);\n          })]\n        }, index);\n      })\n    })]\n  });\n};\nvar _default = exports.default = Exercises;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_Exercisesstyle","_native","_jsxRuntime","_this","_jsxFileName","exercises","Sun","Mon","Tue","Wed","Thu","Fri","Sat","getRandomExercises","category","count","categoryExercises","selectedExercises","length","randomIndex","Math","floor","random","exercise","includes","push","Exercises","_ref","_route$params","route","navigation","useNavigation","selectedDays","params","jsx","View","children","Text","jsxs","ImageBackground","source","style","styles","backgroundImage","container","text","ScrollView","scrollContainer","map","day","index","text1","exerciseIndex","TouchableOpacity","button","buttonWithMargin","onPress","navigate","exerciseName","buttonText","_default","exports","default"],"sources":["C:/Users/kavinda/Downloads/gig/Exercises_App-main/src/Screens/Exercise.js"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  ImageBackground,\n} from 'react-native';\nimport {styles} from '../stylesheets/Exercisesstyle';\nimport {useNavigation} from '@react-navigation/native';\n\nconst exercises = {\n  Sun: [\n    'Hammer curl              3reps|12/10/s       30sec',\n    'Barbell curl             3reps|12/10/s       30sec',\n    'Spider curl              3reps|12/10/s       30sec',\n    'Incline dumbbell curl    3reps|12/10/s       30sec',\n    'Reverse barbell curl     3reps|12/10/s       30sec',\n    'Overhead cable curl      3reps|12/10/s       30sec',\n    'Drag curl                3reps|12/10/s       30sec',\n    'Barbell Bicep Curl       3reps|12/10/s       30sec',\n    'Preacher Curl            3reps|12/10/s       30sec',\n  ],\n  Mon: [\n    'Lying triceps extension   3reps|12/10/s       30sec',\n    'Weighted bench dip        3reps|12/10/s       30sec',\n    'Tricep dips               3reps|12/10/s       30sec',\n    'Overhead Triceps          3reps|12/10/s       30sec',\n    'Close grip bench press    3reps|12/10/s       30sec',\n    'TRX tricep extension      3reps|12/10/s       30sec',\n  ],\n  Tue: [\n    'Front press        3reps|12/10/s       30sec',\n    'Back press         3reps|12/10/s       30sec',\n    'Face pull down     3reps|12/10/s       30sec',\n    'Arnold press       3reps|12/10/s       30sec',\n  ],\n  Wed: [\n    'Flat bench press       3reps|12/10/s         30sec',\n    'Dumbbell bench press   3reps|12/10/s         30sec',\n    'Incline bench press    3reps|12/10/s         30sec',\n    'Cable flys             3reps|12/10/s         30sec',\n  ],\n  Thu: [\n    'Leg press            3reps|12/10/s          30sec',\n    'Leg curl             3reps|12/10/s          30sec',\n    'Leg extensions       3reps|12/10/s          30sec',\n    'Full squat           3reps|12/10/s          30sec',\n  ],\n  Fri: [\n    'Flat bench press        3reps|12/10/s            30sec',\n    'Dumbbell bench press    3reps|12/10/s            30sec',\n    'Leg extensions          3reps|12/10/s            30sec',\n    'Full squat              3reps|12/10/s            30sec',\n  ],\n  Sat: [\n    'Incline bench press       3reps|12/10/s      30sec',\n    'Cable flys                3reps|12/10/s      30sec',\n    'Close grip bench press    3reps|12/10/s      30sec',\n    'TRX tricep extension      3reps|12/10/s      30sec',\n  ],\n};\n\nconst getRandomExercises = (category, count) => {\n  const categoryExercises = exercises[category];\n  const selectedExercises = [];\n\n  while (selectedExercises.length < count) {\n    const randomIndex = Math.floor(Math.random() * categoryExercises.length);\n    const exercise = categoryExercises[randomIndex];\n\n    if (!selectedExercises.includes(exercise)) {\n      selectedExercises.push(exercise);\n    }\n  }\n\n  return selectedExercises;\n};\n\nconst Exercises = ({route}) => {\n  const navigation = useNavigation();\n  const selectedDays = route?.params?.selectedDays || [];\n\n  if (selectedDays.length === 0) {\n    return (\n      <View>\n        <Text>No days selected.</Text>\n      </View>\n    );\n  }\n\n  return (\n    <ImageBackground\n      source={require('./image/secondpage_image.jpg')}\n      style={styles.backgroundImage}>\n      <View style={styles.container}>\n        <Text style={styles.text}>Your BMI is...</Text>\n      </View>\n      <ScrollView style={styles.scrollContainer}>\n        {selectedDays.map((day, index) => (\n          <View key={index}>\n            <Text style={styles.text1}>{`Day ${index + 1}`}</Text>\n            {getRandomExercises(day, 4).map((exercise, exerciseIndex) => (\n              <TouchableOpacity\n                key={exerciseIndex}\n                style={[styles.button, styles.buttonWithMargin]}\n                onPress={() =>\n                  navigation.navigate('Tutorial', {exerciseName: exercise})\n                }>\n                <Text style={styles.buttonText}>{exercise}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        ))}\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nexport default Exercises;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}